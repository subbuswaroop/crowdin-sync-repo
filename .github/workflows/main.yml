name: upload source workflow
on:
  push:
    branches: [ main ]
    paths:
    - 'locales-json/en.json'
  
  workflow_dispatch:

jobs:
  upload-sources-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v10

      - name: crowdin action
        uses: crowdin/github-action@1.4.0
        with:
          upload_sources: true
          # download_translations: true
          # localization_branch_name: 'translations_branch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

  send-email:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: 8BitJonny/gh-get-current-pr@1.3.0
        id: PR
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
      - uses: technote-space/get-diff-action@v5
      - run: |
          echo "Newly added fields" >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- locales-json/en.json -U0 | { grep '^[+]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> diff-text.txt
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: difftext
          path: diff-text.txt
      - shell: bash
        run: |  
          echo "${{ steps.PR.outputs.pr_body }}" | sed -e 's/|/\\|/g' > pr-details-for-screenshot.txt   
      - shell: bash
        run: |
          grep http ./pr-details-for-screenshot.txt | sed 's/http/\nhttp/g' | grep ^http | sed 's/\(^http[^ <]*\)\(.*\)/\1/g' | sort -u > pr-details-for-screenshot.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: difftext
      - name: iterate screenshot file
        run: |
            i=1
            while read p; do
              url=$(echo $p | tr -d '>' | tr -d $'\r' | tr -d ')')
              if [[ $url =~ "images" ]]; then
                curl "$url" -o artifacts/screenshot${i}.png
                i=$((i+1))
              fi
            done < pr-details-for-screenshot.txt
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: new screenshot download test
          # Required recipients' addresses:
          to: dragonsubbu@gmail.com
          # Required sender full name (address can be skipped):
          from: <kcetkodaiboys@gmail.com> # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          body: new screenshot download test
          html_body: new screenshot download test
          cc: dragonsubbu@gmail.com
          bcc: dragonsubbu@gmail.com
          reply_to: dragonsubbu@gmail.com
          in_reply_to: <dragonsubbu@gmail.com>
          ignore_cert: true
          convert_markdown: true
          attachments: artifacts/*.png, diff-text.txt
          priority: low
          
#       - name: Set SHA
#         id: commit-sha
#         run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#       - name: Check SHA
#         run: |
#           git_hash=$(git rev-parse --short "$GITHUB_SHA")
#           git_before_hash="${{ github.event.before }}"
#           echo "$git_hash"
#           echo "$git_before_hash"
#           #echo ${{ steps.commit-sha.outputs.sha_short }}
          
# #       - name: Set croQL query
# #         id: croql
# #         run: echo ::set-output name=query::$(echo 'count of translations where ( language = @language:"en" and ( context = "fd.portal") ) = 0' | jq -sRr @uri)

#       - name: Get All Strings
#         id: strings-list
#         uses: satak/webrequest-action@master
#         with:
#           url: https://api.crowdin.com/api/v2/projects/480641/strings?limit=500
#           method: GET
#           headers: '{"Authorization": "Bearer ${{ secrets.CROWDIN_PERSONAL_TOKEN }}"}'

#       - name: Get data
#         id: vars
#         run: echo ::set-output name=outputvar::$(echo '${{ steps.strings-list.outputs.output }}' | jq '.data.data')
#       - name: Print data
#         run: |
#           echo ${{ steps.vars.outputs.outputvar }}
       
#       - name: List all strings
#         run: |
#           OUTPUTTEST=('${{ steps.strings-list.outputs.output }}' | jq '.data')
#           echo "$OUTPUTTEST"
#          outputVar='${{ steps.strings-list.outputs.output }}' | jq '.data'
#          echo "$outputVar"
#       - name: List all modified files
#         run: |
#           for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
#             echo "$file was modified"
#           done
