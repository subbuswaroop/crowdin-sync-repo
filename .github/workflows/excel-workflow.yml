name: Add to Excel
on:
  push:
    branches: [ main ]
    paths:
    - 'locales-json/en.json'
  
  workflow_dispatch:

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: 8BitJonny/gh-get-current-pr@1.3.0
        id: PR
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
      - uses: technote-space/get-diff-action@v5
      - run: |
          echo "Newly added fields" >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- locales-json/en.json -U0 | { grep '^[+]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- locales-json/en.json -U0 | { grep '^[+]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> new-changes.json
      - shell: bash
        run: |  
          echo "${{ steps.PR.outputs.pr_body }}" | sed -e 's/|/\\|/g' > pr-details-for-screenshot.txt   
      - shell: bash
        run: |
          if grep -q "images" pr-details-for-screenshot.txt; then
            grep http ./pr-details-for-screenshot.txt | sed 's/http/\nhttp/g' | { grep ^http || true; } | sed 's/\(^http[^ <]*\)\(.*\)/\1/g' > pr-details-for-screenshot.txt
          fi
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: screenshot
          path: pr-details-for-screenshot.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: screenshot
      - name: get Pull Request URL
        uses: kceb/pull-request-url-action@v1
        id: pr-url
      - run: echo "The Pull Request URL is ${{ steps.pr-url.outputs.url }}" >> diff-text.txt
      - name: iterate screenshot file
        run: |
            i=1
            while read p; do
              url=$(echo $p | tr -d '>' | tr -d $'\r' | tr -d ')')
              if [[ $url =~ "images" ]]; then
                curl "$url" -o artifacts/screenshot${i}.png
                i=$((i+1))
              elif [[ $url =~ "freshrelease" ]]; then
                echo $url
                if [[ $url =~ "|" ]]; then
                  echo "The corresponding freshrelease ticket is" >> diff-text.txt
                  echo $url | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" >> diff-text.txt
                  echo "The PR url is ${{ github.event.number }} ${{ steps.pr-url.outputs.url }}"
                else
                  echo "The corresponding freshrelease ticket is $url " >> diff-text.txt
                fi
              fi
            done < pr-details-for-screenshot.txt
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: difftext
          path: diff-text.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: difftext
      - name: iterate json file
        run: |
            echo "[" >> construct-array.txt
            while read p; do
              echo "[" >> construct-array.txt
              p=$(echo $p | sed 'y/+/ /')
              p=$(echo $p | sed 's/,/], /g')
              p=$(echo $p | sed 's/:/,/g')
              echo $p >> construct-array.txt
            done < new-changes.json
            echo "]]" >> construct-array.txt
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: construct-array
          path: construct-array.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: construct-array
      - name: Set json array in git variable
        run: |
          JSON=$(cat ./construct-array.txt)
          JSON=$(echo $JSON | sed 's/, ]]/]/g')
          echo $JSON
          echo "GITHUB_TESTING=$(echo $JSON)" >> $GITHUB_ENV
      - id: 'update_worksheet'
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: 1XjECBS-qP78FSeU1q55oWNqch-94-YpUh2-naKzIfsw
          commands: | 
            [
              { "command": "getWorksheet", "args": { "worksheetTitle": "new demo sheet" }},
              { "command": "appendData", "args": { "data": ${{ env.GITHUB_TESTING }} , "minCol": 1}}
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}